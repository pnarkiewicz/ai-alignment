Bootstrap: docker
From: nvidia/cuda:12.4.0-devel-ubuntu22.04

%labels
    Version 1.0 for Athena HPC

%environment
    export VIRTUAL_ENV=/opt/venv
    export PATH="$VIRTUAL_ENV/bin:$PATH"
    export CUDA_HOME=/usr/local/cuda
    export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
    # Force bitsandbytes to use CUDA version 124, because this version is on Athena when "module load CUDA" is used.
    export BNB_CUDA_VERSION=124
    export TMPDIR=/tmp
    export TEMP=/tmp
    export TMP=/tmp

%post
    echo "Updating apt and installing prerequisites..."
    apt-get update && apt-get install -y \
        git \
        python3.11 \
        python3.11-venv \
        python3.11-dev \
        build-essential \
        cmake \
        wget

    echo "Setting python alternative..."
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1

    echo "Creating virtual environment in /opt/venv..."
    python3 -m venv /opt/venv

    echo "Activating virtual environment and upgrading pip..."
    . /opt/venv/bin/activate
    pip install --upgrade pip setuptools wheel

    echo "Installing Python dependencies from requirements.txt..."
    pip install -r /requirements.txt

    # Now install bitsandbytes from source. It is recommended to install bitsandbytes from source to ensure compatibility with the CUDA version.
    # https://huggingface.co/docs/bitsandbytes/main/en/installation#cuda-compile
    echo "Cloning bitsandbytes repository..."
    git clone --branch 0.45.1 https://github.com/bitsandbytes-foundation/bitsandbytes.git /opt/bitsandbytes 

    echo "Building bitsandbytes from source..."
    cd /opt/bitsandbytes
    # Configure and build with CMake using the CUDA backend.
    cmake -DCOMPUTE_BACKEND=cuda -S .
    make
    echo "Installing bitsandbytes into the venv..."
    pip install .

    echo "Cleaning up temporary files..."
    cd /
    apt-get clean && rm -rf /var/lib/apt/lists/*

%files
    requirements.txt /requirements.txt

%runscript
    # When the container is run, activate the internal venv and forward the command-line.
    exec /opt/venv/bin/python "$@"
